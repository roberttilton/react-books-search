{"version":3,"sources":["components/Jumbotron/index.js","components/Card/index.js","components/Form/index.js","components/List/index.js","components/Grid/index.js","components/Book/index.js","components/Footer/index.js","utils/API.js","pages/Home.js","pages/Saved.js","pages/NoMatch.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Jumbotron","children","className","Card","icon","title","aria-hidden","Form","q","handleInputChange","handleFormSubmit","htmlFor","id","type","value","placeholder","name","onChange","required","onClick","ListItem","Container","fluid","Row","Col","size","split","map","join","Book","subtitle","authors","link","description","image","Button","target","rel","href","src","alt","Footer","axios","get","params","delete","bookData","post","Home","state","books","message","event","setState","getBooks","API","then","res","data","catch","preventDefault","handleBookSave","book","find","googleId","volumeInfo","infoLink","imageLinks","thumbnail","this","Component","Saved","getSavedBooks","err","console","log","handleBookDelete","NoMatch","role","aria-label","Nav","open","width","window","innerWidth","updateWidth","newState","toggleNav","addEventListener","removeEventListener","Link","to","data-toggle","data-target","aria-controls","aria-expanded","location","pathname","App","Switch","Route","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cc259d14.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron({ children }) {\n  return <div className=\"jumbotron mt-4\">{children}</div>;\n}\n\nexport default Jumbotron;\n","import React from \"react\";\n\nfunction Card({ icon, title, children }) {\n  return (\n    <div className=\"card mt-4\">\n      <div className=\"card-header\">\n        <h3>\n          <strong>\n            <i className={`fa fa-${icon}`} aria-hidden=\"true\" /> {title}\n          </strong>\n        </h3>\n      </div>\n      <div className=\"card-body\">{children}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nfunction Form({ q, handleInputChange, handleFormSubmit }) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"Query\">\n          <strong>Book</strong>\n        </label>\n        <input\n          className=\"form-control\"\n          id=\"Title\"\n          type=\"text\"\n          value={q}\n          placeholder=\"Ready Player One\"\n          name=\"q\"\n          onChange={handleInputChange}\n          required\n        />\n      </div>\n      <div className=\"pull-right\">\n        <button\n          onClick={handleFormSubmit}\n          type=\"submit\"\n          className=\"btn btn-lg btn-danger float-right\"\n        >\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport \"./style.css\";\n\n// This component exports both the List and ListItem components\n\nexport const List = ({ children }) => (\n  <ul className=\"list-group\">\n    {children}\n  </ul>\n);\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ListItem } from \"../List\";\nimport { Row, Col } from \"../Grid\";\nimport \"./style.css\";\n\nfunction Book({ title, subtitle, authors, link, description, image, Button }) {\n  return (\n    <ListItem>\n      <Row className=\"flex-wrap-reverse\">\n        <Col size=\"md-8\">\n          <h3 className=\"font-italic\">{title}</h3>\n          {subtitle && <h5 className=\"font-italic\">{subtitle}</h5>}\n        </Col>\n        <Col size=\"md-4\">\n          <div className=\"btn-container\">\n            <a className=\"btn btn-light\" target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\n              View\n            </a>\n            <Button />\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-6\">\n          <p className=\"font-italic small\">Written by {authors}</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"12 sm-4 md-2\">\n          <img className=\"img-thumbnail img-fluid w-100\" src={image} alt={title} />\n        </Col>\n        <Col size=\"12 sm-8 md-10\">\n          <p>{description}</p>\n        </Col>\n      </Row>\n    </ListItem>\n  );\n}\n\nexport default Book;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer>\n      <hr />\n      <p className=\"pull-right\">\n        <i className=\"fab fa-github\" /> Proudly built using React.js\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import axios from \"axios\";\n\nexport default {\n  // Gets books from the Google API\n  getBooks: function(q) {\n    return axios.get(\"/api/google\", { params: { q: \"title:\" + q } });\n  },\n  // Gets all saved books\n  getSavedBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Deletes the saved book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves an book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Form from \"../components/Form\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\n\nclass Home extends Component {\n  state = {\n    books: [],\n    q: \"\",\n    message: \"Search For A Book To Begin!\",\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  getBooks = () => {\n    API.getBooks(this.state.q)\n      .then((res) =>\n        this.setState({\n          books: res.data,\n        })\n      )\n      .catch(() =>\n        this.setState({\n          books: [],\n          message: \"No New Books Found, Try a Different Query\",\n        })\n      );\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    this.getBooks();\n  };\n\n  handleBookSave = (id) => {\n    const book = this.state.books.find((book) => book.id === id);\n\n    API.saveBook({\n      googleId: book.id,\n      title: book.volumeInfo.title,\n      subtitle: book.volumeInfo.subtitle,\n      link: book.volumeInfo.infoLink,\n      authors: book.volumeInfo.authors,\n      description: book.volumeInfo.description,\n      image: book.volumeInfo.imageLinks.thumbnail,\n    }).then(() => this.getBooks());\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1 className=\"text-center\">\n                <strong>(React) Google Books Search</strong>\n              </h1>\n              <h2 className=\"text-center\">\n                Search for and Save Books of Interest.\n              </h2>\n            </Jumbotron>\n          </Col>\n          <Col size=\"md-12\">\n            <Card title=\"Book Search\" icon=\"far fa-book\">\n              <Form\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n                q={this.state.q}\n              />\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <Card title=\"Results\">\n              {/* Render the arrays of books in this.state. If the array is empty, display the message in this.state */}\n              {/* YOUR CODE HERE */}\n              <Book books={this.state.books} handleBookSave={this.handleBookSave}/>\n            </Card>\n          </Col>\n        </Row>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Card from \"../components/Card\";\nimport Book from \"../components/Book\";\nimport Footer from \"../components/Footer\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List } from \"../components/List\";\n\nclass Saved extends Component {\n  state = {\n    books: [],\n  };\n\n  componentDidMount() {\n    this.getSavedBooks();\n  }\n\n  getSavedBooks = () => {\n    API.getSavedBooks()\n      .then((res) =>\n        this.setState({\n          books: res.data,\n        })\n      )\n      .catch((err) => console.log(err));\n  };\n\n  handleBookDelete = (id) => {\n    API.deleteBook(id).then((res) => this.getSavedBooks());\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1 className=\"text-center\">\n                <strong>(React) Google Books Search</strong>\n              </h1>\n              <h2 className=\"text-center\">\n                Search for and Save Books of Interest.\n              </h2>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <Card title=\"Saved Books\" icon=\"download\">\n              {/* \n                Render the books in the array in this.state using the Book component.\n                Each book should have a delete button associate with it.\n                If the array is empty, then disply \"No Saved Books\" on the web page. */}\n              {/* YOUR CODE IS HERE */}\n              <Book books={this.state.books} handleBookDelete={this.handleBookDelete}/>\n            </Card>\n          </Col>\n        </Row>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nexport default Saved;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1 className=\"text-center\">404 Page Not Found</h1>\n            <h1 className=\"text-center\">\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nclass Nav extends Component {\n  state = {\n    open: false,\n    width: window.innerWidth\n  };\n\n  updateWidth = () => {\n    const newState = { width: window.innerWidth };\n\n    if (this.state.open && newState.width > 991) {\n      newState.open = false;\n    }\n\n    this.setState(newState);\n  };\n\n  toggleNav = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWidth);\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-2\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Google Books\n        </Link>\n        <button\n          onClick={this.toggleNav}\n          className=\"navbar-toggler\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className={`${this.state.open ? \"\" : \"collapse \"}navbar-collapse`} id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/\"\n              >\n                Search\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/saved\"\n              >\n                Saved\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Saved from \"./pages/Saved\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        {/* Create Nav and three reacrt routes. One route for path=\"/\" which renders the Home page and\n          One route for path='/saved\" which renders the Saved  component and\n          One route for all the rest of paths which renders the MoMatch page */}\n        {/* YOUR CODE HERE */}\n        <Nav>\n        </Nav>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/saved\">\n            <Saved />\n          </Route>\n          <Route>\n            <NoMatch />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n\n"],"sourceRoot":""}